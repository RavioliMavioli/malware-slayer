class_name FileComponent extends Node2D

@export var health_component: HealthComponent
@export var directory: String
@export var file_extension:String
@export var file_content: Label

var dir: DirAccess
var entity_dir: String
var entity_type: String

func _ready():
	
	match health_component.entity_type:
		health_component._entity_type.PLAYER:
			entity_type = "player_"
		health_component._entity_type.ENEMY:
			entity_type = "enemy_"
		health_component._entity_type.BOSS:
			entity_type = "boss_"
		_:
			entity_type = "etc_"
			
	dir = DirAccess.open(directory)
	entity_dir = directory
	if !entity_dir.ends_with("/"):
		entity_dir += "/"
	entity_dir += entity_type + str(EntityPooler.enemy_i) + file_extension
	EntityPooler.enemy_i += 1
	
	var entity_file: FileAccess = FileAccess.open(entity_dir,FileAccess.WRITE)
	if file_content != null:
		entity_file.store_string(file_content.text)
	entity_file.close()
	
func _notification(what):
	if what == NOTIFICATION_WM_CLOSE_REQUEST:
		dir.remove(entity_dir)
		
func _process(_delta):

	if !dir.file_exists(entity_dir):
		health_component.health = 0
		if get_parent().has_method("dead"):
			get_parent().dead()
		
	if health_component.health <= 0:
		dir.remove(entity_dir)
