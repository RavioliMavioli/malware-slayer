extends Node2D

@export var knockback_factor: float = 10
@export var modulation := Color(5.0, 5.0, 5.0)

var hitbox_component: Node2D:
	get: return %HitboxComponent
var entity :PhysicsBody2D:
	get: return owner
var sfx: SFXPlayer:
	get: return $SoundPlayer

func _ready() -> void:
	hitbox_component.connect("hit", _hit)

func _hit(source_node:Node2D):
	var dir := source_node.global_position.direction_to( entity.global_position )
	knockback(dir)
	hit_animation()
	sfx.play()

func knockback(dir: Vector2):
	var knockback_direction = sign(dir.x)
	var knockback_transf := Vector2(knockback_direction * knockback_factor, -abs(knockback_factor/2))
	entity.move_and_collide(knockback_transf)

func hit_animation():
	entity.modulate = modulation
