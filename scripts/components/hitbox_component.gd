extends Area2D

@export var knockback_factor: float
@export var health_component: HealthComponent

func hit(bullet_position:Vector2, damage:int):
	damaged(damage)
	knockback(bullet_position)
	hit_animation()

func damaged(damage: int):
	health_component.health -= damage
	if health_component.health <= 0 and get_parent().has_method("dead"):
		get_parent().modulate = Color(1.0, 1.0, 1.0)
		get_parent().dead()
		call_deferred("queue_free")

func knockback(bullet_position: Vector2):

	var knockback_transf:Vector2 = get_parent().global_position - bullet_position
	var knockback_direction = sign(knockback_transf.x)

	knockback_transf = Vector2(knockback_direction * knockback_factor, -abs(knockback_factor/2))

	match EntityManager.get_entity_type(owner):
		EntityManager.TYPE.PLAYER:
			pass
		EntityManager.TYPE.ENEMY:
			get_parent().move_and_collide(knockback_transf)
		EntityManager.TYPE.BOSS:
			pass
		EntityManager.TYPE.ENTITY:
			pass

func hit_animation():

	match EntityManager.get_entity_type(owner):
		EntityManager.TYPE.PLAYER:
			pass
		EntityManager.TYPE.ENEMY:
			get_parent().modulate = Color(5.0, 5.0, 5.0)
		EntityManager.TYPE.BOSS:
			pass
		EntityManager.TYPE.ENTITY:
			pass

