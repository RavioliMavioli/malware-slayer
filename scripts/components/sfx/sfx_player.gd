class_name SFXPlayer extends Node2D

signal finished

@export var sfx_array: Array[AudioStream]
@export var shuffle_sfx: bool = true
@export var max_polyphony: int = 5
@export var volume: float = 0.0
@export var panning_strength: float = 1.0

var audio_streams: Array[AudioStreamPlayer2D]
var index := 0

func _ready() -> void:
	_spawn_sfx_node()

func play() -> void:
	if sfx_array.size() == 0:
		return
	if shuffle_sfx:
		index = randi_range(0, sfx_array.size() - 1)
	else:
		index = wrapi(index + 1, 0, sfx_array.size())
	audio_streams[index].play()

func destroy() -> void:
	for stream in audio_streams:
		stream.queue_free()

func _spawn_sfx_node() -> void:
	for sound in sfx_array:
		var sfx_node = AudioStreamPlayer2D.new()
		sfx_node.stream = sound
		sfx_node.volume_db = volume
		sfx_node.max_polyphony = max_polyphony
		sfx_node.panning_strength = panning_strength
		sfx_node.finished.connect(_finished)
		audio_streams.append(sfx_node)
		add_child(sfx_node)

func _finished() -> void:
	finished.emit()
