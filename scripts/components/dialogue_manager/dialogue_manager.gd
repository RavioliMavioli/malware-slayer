class_name DialogueManager extends Node2D

@export var json: JSON
@export var speed_multiplier: float = 2.0
@export var conditions: Dictionary

const UPDATE_TIME: float = 2.0

var dialogue: Dialogue:
	get: return Game.instance.ui.get_node("MasterDialogue")
var trigger: Area2D:
	get: return $TriggerArea
var interacted := false

func update_conditions() -> void:
	pass

func start_dialogue() -> void:
	update_conditions()
	assert(conditions.size() > 0, "Conditions are not setup correctly.")
	var ids :Array[int] = dialogue.get_ids_from_conditions(conditions)
	assert(ids.size() > 0, "No conditions are met, please make sure it meets at least one condition.")
	dialogue.start(ids)

func _ready() -> void:
	assert(json != null, "JSON is not valid or empty.")
	trigger.body_exited.connect(_on_body_exited)
	dialogue.finished.connect(_dialogue_finished)

func _input(event: InputEvent) -> void:
	if event.is_action_pressed("Down") and trigger.has_overlapping_bodies() and Player.enable_input == Player.ENABLE_INPUT.ENABLED and Player.player_node.is_on_floor():
		Player.enable_input = Player.ENABLE_INPUT.DISABLED
		_setup_dialogue()
		_disable_camera()
		start_dialogue()
		await dialogue.finished
		_enable_camera()
		Player.enable_input = Player.ENABLE_INPUT.ENABLED
	if event.is_action_pressed("ui_cancel"):
		dialogue.exit(false)
		_enable_camera()
		
func _setup_dialogue() -> void:
	dialogue.speed_multiplier = speed_multiplier
	dialogue.json_read(json)

func _disable_camera() -> void:
	CAV.current_camera_mode = CAV.CAMERA_MODE.CENTER_PLAYER

func _enable_camera() -> void:
	CAV.current_camera_mode = CAV.CAMERA_MODE.FOLLOW_PLAYER

func _dialogue_finished(is_normal: bool) -> void:
	if is_normal:
		interacted = true

func _on_body_exited(body: Node2D) -> void:
	dialogue.exit(false)
