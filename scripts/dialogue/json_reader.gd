class_name DialogueJSONReader extends Node2D

signal dialogue_finished
enum DICK {ASD}
var text_processor: DialogueTextProcessor:
	get: return %TextProcessor
	
var conditions: Dictionary
var variables: Dictionary
var json_dict: Dictionary
var dict_ids: Array
var id_playlist: Array[int] = [0]
var current_id: int = 0
var text: Array
var character: String
var expression: String

func start(ids: Array[int]) -> void:
	id_playlist = ids
	_play_conversation()

func read(json: JSON) -> void:
	json_dict = _read_json_as_dict(json)
	_reset_curr_id()
	_retreive_attributes_from_dict(json_dict)

func exit() -> void:
	text_processor.exit()
	
func _ready() -> void:
	text_processor.finished.connect(_text_processor_finished)

func _read_json_as_dict(_json: JSON) -> Dictionary:
	return _json.data

func _play_conversation() -> void:
	_retreive_attributes_from_dict(json_dict)
	text_processor.start(text, character, expression, variables)
	
func _retreive_attributes_from_dict(dict: Dictionary) -> void:
	var curr_i := id_playlist[current_id]
	dict_ids = dict.id
	text = dict.id[curr_i].text
	character = dict.id[curr_i].character
	conditions = dict.id[curr_i].conditions
	expression = dict.id[curr_i].expression
	variables = dict.id[curr_i].variables

func _reset_curr_id() -> void:
	current_id = 0

func _text_processor_finished() -> void:
	current_id += 1
	if current_id >= id_playlist.size():
		dialogue_finished.emit()
		return
	_play_conversation()
