class_name Dialogue extends Control

signal finished

@export var json: JSON
@export var speed_multiplier: float = 2

var json_reader: DialogueJSONReader:
	get: return %JSONReader
var conditions: Dictionary:
	get: return json_reader.conditions
var skipable := false

func start(id_index: Array[int]) -> void:
	json_reader.start(id_index)

func ids_from_conditions(conditions: Dictionary) -> Array[int]:
	var id_arr: Array[int]
	for id in json_reader.json_dict["id"]:
		if id.find_key(conditions) != null:
			var i = json_reader.json_dict["id"].find(id)
			id_arr.append(i)
	return id_arr

func _ready() -> void:
	json_reader.dialogue_finished.connect(_dialogue_finished)

func _input(event: InputEvent) -> void:
	if event.is_action_pressed("ui_cancel"):
		finished.emit()
		queue_free()

func _dialogue_finished() -> void:
	finished.emit()
	queue_free()
