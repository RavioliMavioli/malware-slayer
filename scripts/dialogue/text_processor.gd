class_name DialogueTextProcessor extends Node2D

signal finished

var text_displayer: DialogueTextDisplayer:
	get: return %TextDisplayer
var skip_button: Button:
	get: return %Skip
	
var arr_text: Array
var displayed_text: String
var arr_text_index: int
var character_name: String
var portrait: ImageTexture

func _ready() -> void:
	text_displayer.finished.connect(_text_finished)
	skip_button.button_down.connect(_skip)
	
func start(_arr_text: Array, _character_name: String) -> void:
	character_name = _character_name
	arr_text_index = 0
	arr_text = _arr_text
	_create_space_at_the_end_of_every_str_arr()
	displayed_text = arr_text[arr_text_index]
	_start_displayer()
	
func exit() -> void:
	text_displayer.exit()

func _text_finished() -> void:
	arr_text_index += 1
	await text_displayer.next
	if !text_displayer.tps_timer.is_stopped():
		return
	if arr_text_index >= arr_text.size():
		finished.emit()
		return
	displayed_text = arr_text[arr_text_index]
	_start_displayer()

func _create_space_at_the_end_of_every_str_arr() -> void:
	# a little bit of hack
	for s in arr_text:
		if s[s.length() - 1] != " ":
			var i := arr_text.find(s)
			arr_text[i] += " "

func _start_displayer() -> void:
	text_displayer.start(displayed_text, character_name)

func _process_image(_img_name: String) -> void:
	pass

func _skip() -> void:
	text_displayer.exit()
	finished.emit()
