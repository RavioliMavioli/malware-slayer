class_name Dropable extends RigidBody2D

@export var lifetime: float = 5.0

const FADING_TIME := 1.5
var player: PlayerInstance = await Player.get_player_node()
var light: Light2D:
	get: return $Light
var picked = false
var trail:TrailSpawner
var lifetime_timer: SceneTreeTimer
var tween: Tween

func pick() -> void:
	pass

func spawn_trail() -> void:
	var curve = load("res://scripts/visual_effects/trail/curve1.tres")
	var color := Color.ORANGE
	light.color = color
	color.a = 0.33
	trail = TrailSpawner.new(50.0, 10.0, curve, self, color)
	trail.spawn()

func _ready() -> void:
	spawn_trail()
	_create_timer()
	
func _physics_process(delta):
	if !picked:
		return
	if tween != null:
		tween.kill()
	freeze = true
	owner.modulate.a = lerp(owner.modulate.a, 1.0, 1.0)
	global_position = lerp(global_position, player.global_position, delta*10)
	if global_position.distance_to(player.global_position) < 30:
		set_physics_process(false)
		queue_free()
		pick()
		
func _create_timer() -> void:
	lifetime_timer = get_tree().create_timer(lifetime)
	lifetime_timer.timeout.connect(_lifetime_timer_timeout)
	
func _lifetime_timer_timeout() -> void:
	_fade_out()

func _fade_out() -> void:
	tween = get_tree().create_tween()
	tween.tween_property(owner, "modulate", Color.TRANSPARENT, FADING_TIME)
	await tween.finished
	queue_free()

func _on_area_2d_body_entered(body) -> void:
	picked = true
