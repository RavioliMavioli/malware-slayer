class_name Dropable extends RigidBody2D

@export var lifetime: float = 6.0

const FADING_TIME := 1.5
const DELAY := 0.15
var player: PlayerInstance = await Player.get_player_node()
var light: Light2D:
	get: return $Light
var detector: Area2D:
	get: return $Detector
var sfx: SFXPlayer:
	get: return $SFXPlayer
var trail: TrailSpawner:
	get: return $TrailSpawner
var picking = false
var lifetime_timer: SceneTreeTimer
var tween: Tween

func picked() -> void:
	hide()
	trail.destroy()
	sfx.play()
	await sfx.finished
	queue_free()

func _ready() -> void:
	_setup_detector()
	_delay()
	_create_timer()
	_spawn_trail()
	
func _physics_process(delta):
	if !picking:
		return
	if tween != null:
		tween.kill()
	freeze = true
	owner.modulate.a = lerp(owner.modulate.a, 1.0, 1.0)
	global_position = lerp(global_position, player.global_position, delta*10)
	if global_position.distance_to(player.global_position) < 30:
		set_physics_process(false)
		picked()

func _setup_detector() -> void:
	detector.body_entered.connect(_detector_body_entered)
	
func _delay() -> void:
	detector.monitoring = false
	await get_tree().create_timer(DELAY).timeout
	detector.monitoring = true

func _create_timer() -> void:
	lifetime_timer = get_tree().create_timer(lifetime - FADING_TIME)
	lifetime_timer.timeout.connect(_lifetime_timer_timeout)
	
func _spawn_trail() -> void:
	trail.spawn(self)
	light.color = trail.color
	
func _lifetime_timer_timeout() -> void:
	_fade_out()

func _fade_out() -> void:
	tween = get_tree().create_tween()
	tween.tween_property(owner, "modulate", Color.TRANSPARENT, FADING_TIME)
	await tween.finished
	queue_free()

func _detector_body_entered(body: Node2D) -> void:
	picking = true
