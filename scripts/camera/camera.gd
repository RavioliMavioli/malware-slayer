extends Camera2D

const VERTICAL_OFFSET = -30.0
const HORIZONTAL_OFFSET = 130.0
const DM = 1.3
const MM = 4
const MAX_X = 600
const MAX_Y = 300
const ZOOM_FACTOR = 2

@export var player:PlayerClass

enum zoom_type {NORMAL, ZOOMED}

var current_zoom_type: zoom_type = zoom_type.NORMAL
var offset_x: float = 0.0
var camera_position: Vector2
var target_zoom: Vector2
var target_coordinate: Vector2
var player_global_position:Vector2 = Vector2(0,0)

func _ready():
	CAV.camera_node = self

func _input(event):
	if event.is_action_pressed("Q"):
		current_zoom_type = wrapi(current_zoom_type + 1, zoom_type.NORMAL, zoom_type.size()) 
		match current_zoom_type:
			zoom_type.NORMAL:
				Player.enable_input = Player._enable_input.ENABLED
			zoom_type.ZOOMED:
				Player.enable_input = Player._enable_input.DISABLED
		
func _physics_process(delta):

	var mouse_pos = get_global_mouse_position()
	var d_position = mouse_pos - global_position
	
	player_global_position = player.global_position
	# Camera follows player
	global_position = Vector2(	lerp(global_position.x, player_global_position.x + offset_x, delta * MM)			,
								lerp(global_position.y, player_global_position.y + VERTICAL_OFFSET, delta * MM/2)	)
	
	# Viewport Management
	CAV.viewport_container_node.scale = lerp(CAV.viewport_container_node.scale, target_zoom, delta * MM)
	CAV.viewport_container_node.position = lerp(CAV.viewport_container_node.position, target_coordinate, delta * MM)
	
	match current_zoom_type:
		zoom_type.NORMAL:
			target_zoom = CAV.container_default_scaling
			target_coordinate = CAV.container_default_position
			# Camera follows cursor
			var min_abs_d = Vector2(min(abs(d_position.x), MAX_X), min(abs(d_position.y), MAX_Y))
			
			global_position = lerp(global_position, global_position +  min_abs_d * sign(d_position), delta * DM)
				
			offset_x = lerp(offset_x, sign(mouse_pos.x - player_global_position.x) * HORIZONTAL_OFFSET, delta/2)
				
		zoom_type.ZOOMED:
			
			target_zoom = Vector2(ZOOM_FACTOR, ZOOM_FACTOR) * CAV.container_default_scaling
			offset_x = 0.0
			
			# Center viewport container to the screen
			var resized_screen_center: Vector2 = CAV.container_default_size * target_zoom / 2
			var screen_center: Vector2 = CAV.screen_resolution / 2
			var d_screen_center: Vector2 = screen_center - resized_screen_center
			
			target_coordinate = d_screen_center
