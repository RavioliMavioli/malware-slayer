extends Camera2D

const VERTICAL_OFFSET = -30.0
const HORIZONTAL_OFFSET = 130.0
const DM = 1.3
const MM = 4
const MAX_X = 600
const MAX_Y = 300
const ZOOM_FACTOR = 2.0

var offset_x: float = 0.0
var camera_position: Vector2
var target_zoom: Vector2
var target_coordinate: Vector2
var global_position_dm: float
var last_player_mouse_delta: int

func _ready():
	CAV.camera_node = self

func _physics_process(delta):
	var player_global_position: Vector2 = Player.player_node.global_position
	var mouse_pos: Vector2 = get_global_mouse_position()
	var d_position: Vector2 = mouse_pos - global_position
	
	# Camera follows player
	global_position = Vector2(	lerp(global_position.x, player_global_position.x + offset_x, global_position_dm)			,
								lerp(global_position.y, player_global_position.y + VERTICAL_OFFSET, global_position_dm)	)
	# Viewport Management
	CAV.viewport_container_node.scale = lerp(CAV.viewport_container_node.scale, target_zoom, global_position_dm * 2)
	CAV.viewport_container_node.position = lerp(CAV.viewport_container_node.position, target_coordinate, global_position_dm * 2)
	
	match CAV.current_zoom_type:
		
		CAV._zoom_type.NORMAL:
			last_player_mouse_delta = sign(mouse_pos.x - player_global_position.x)
			global_position_dm = delta * MM
			target_zoom = CAV.container_default_scaling
			target_coordinate = CAV.container_default_position
			# Camera follows cursor
			var min_abs_d = Vector2(min(abs(d_position.x), MAX_X), min(abs(d_position.y), MAX_Y))
			
			global_position = lerp(global_position, global_position +  min_abs_d * sign(d_position), delta * DM)
				
			offset_x = lerp(offset_x, last_player_mouse_delta * HORIZONTAL_OFFSET, delta/2)
			
		CAV._zoom_type.ZOOMED:
			global_position_dm = delta * MM / Engine.time_scale / 2
			target_zoom = Vector2(ZOOM_FACTOR, ZOOM_FACTOR) * CAV.container_default_scaling
			# Center subviewport container to the screen
			# Subviewport are basically in the different dimension
			# that requires special wizardy to manipulate them and vice versa
			var resized_screen_center: Vector2 = CAV.container_default_size * target_zoom / 2
			var screen_center: Vector2 = CAV.screen_resolution / 2
			var d_screen_center: Vector2 = screen_center - resized_screen_center
			
			target_coordinate = d_screen_center
			
			offset_x = lerp(offset_x, last_player_mouse_delta * HORIZONTAL_OFFSET / 2, delta / Engine.time_scale / 3)
