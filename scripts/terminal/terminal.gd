extends Control
@onready var ttyanim: AnimationPlayer = $TTYAnimation
@onready var tty_input: RichTextLabel = $TTY/Text/VBoxContainer/Input
@onready var tty_output: RichTextLabel = $TTY/Text/VBoxContainer/Output
@onready var parent: Control = get_parent()
@onready var title: Button = $TTY/Text/Title/HBoxContainer/Title
@onready var env_buttons: ButtonGroup = $Menu/Control/VBoxContainer/env1.button_group
@onready var bash: Bash = Bash.new(self, env_buttons)

func _ready():
	$Template.hide()
	global_position = Vector2.ZERO
	env_buttons.pressed.connect(buttons_pressed) # Manage clicked button on cursor
	update_button_and_shell() # Initialize shell and button

func _unhandled_input(event: InputEvent):
	if !get_meta("is_active"):
		return
	
	if (Input.is_action_pressed("Control") and Input.is_action_just_pressed("Up")) or Input.is_action_just_pressed("ui_up"):
		var buttons: Array = env_buttons.get_buttons()
		var pressed_button: Button = env_buttons.get_pressed_button()
		var current_button_index: int = buttons.find(pressed_button,0)
		var new_button_index: int = wrapi(current_button_index - 1, 0, buttons.size())
		
		pressed_button.button_pressed = false
			
		buttons[new_button_index].button_pressed = true
		
		
	if (Input.is_action_pressed("Control") and Input.is_action_just_pressed("Down")) or Input.is_action_just_pressed("ui_down"):
		var buttons: Array = env_buttons.get_buttons()
		var pressed_button: Button = env_buttons.get_pressed_button()
		var current_button_index: int = buttons.find(pressed_button,0)
		var new_button_index: int = wrapi(current_button_index + 1, 0, buttons.size())
			
		pressed_button.button_pressed = false
			
		buttons[new_button_index].button_pressed = true

	bash.input(event)
	update_button_and_shell()

func _process(_delta):
	ttyanim.speed_scale = 1/Engine.time_scale

func buttons_pressed(_btn):
	update_button_and_shell()

func update_button_and_shell():
	bash.update()
	title.text = " " + env_buttons.get_pressed_button().text + " "

func open():
	ttyanim.play("open")
	
func close():
	ttyanim.play_backwards("close")
