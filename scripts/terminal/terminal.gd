extends Control
@onready var ttyanim: AnimationPlayer = $TTYAnimation
@onready var tty_input: RichTextLabel = $TTY/Text/VBoxContainer/Input
@onready var tty_output: RichTextLabel = $TTY/Text/VBoxContainer/Output
@onready var parent: Control = get_parent()
@onready var title: Button = $TTY/Text/Title/HBoxContainer/Title
@onready var env_buttons: ButtonGroup = $Menu/Control/VBoxContainer/env1.button_group
@onready var babunebash: BabuneBash = BabuneBash.new(self, env_buttons)

func _ready():
	$Template.hide()
	global_position = Vector2.ZERO

func _unhandled_input(event: InputEvent):
	if get_meta("is_active"):
		babunebash.input(event)
		tty_output_scroll(event) # TODO: Doesn't work

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	#TODO: Fix this, these mfs somehow don't execute on _input(event) function 
	
	if (Input.is_action_pressed("CTRL") and Input.is_action_just_pressed("W")) or Input.is_action_just_pressed("ui_up"):
		var buttons: Array = env_buttons.get_buttons()
		var pressed_button: Button = env_buttons.get_pressed_button()
		var current_button_index: int = buttons.find(pressed_button,0)
		var new_button_index: int = wrapi(current_button_index - 1, 0, buttons.size())
		
		pressed_button.button_pressed = false
			
		buttons[new_button_index].button_pressed = true
		
		
	if (Input.is_action_pressed("CTRL") and Input.is_action_just_pressed("S")) or Input.is_action_just_pressed("ui_down"):
		var buttons: Array = env_buttons.get_buttons()
		var pressed_button: Button = env_buttons.get_pressed_button()
		var current_button_index: int = buttons.find(pressed_button,0)
		var new_button_index: int = wrapi(current_button_index + 1, 0, buttons.size())
			
		pressed_button.button_pressed = false
			
		buttons[new_button_index].button_pressed = true
		
			
	title.text = " " + env_buttons.get_pressed_button().text + " "
	
	ttyanim.speed_scale = 1/Engine.time_scale
	# TODO: Also put this on input() of the babunebash script and make it work
	babunebash.update()

func open():
	ttyanim.play("open")
	
func close():
	ttyanim.play_backwards("close")
	
var line:int = 1
func tty_output_scroll(event: InputEvent):
	##### THIS THING DOES NOT WORK ######
	if event is InputEventMouseButton:
		if event.button_index == MOUSE_BUTTON_WHEEL_UP:
			print(line)
			line = wrapi(line + 1, 1, tty_output.get_line_count())
		if event.button_index == MOUSE_BUTTON_WHEEL_DOWN:
			line = wrapi(line - 1, 1, tty_output.get_line_count())
		tty_output.scroll_to_line(line)
