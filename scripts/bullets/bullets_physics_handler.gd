class_name Bullet extends Sprite2D

@export var post_collision: PackedScene
@export var DAMAGE: int
@export_range(10.0, 2000.0, 1.0) var SPEED: int
@export var LIFETIME: float

var timer: SceneTreeTimer
var query := PhysicsPointQueryParameters2D.new()

func bullet_behaviour(delta): # Can be overwritten
	var distance = SPEED*delta
	var motion = transform.x * distance
	position += motion

func _ready():
	query.collide_with_bodies = true
	query.collide_with_areas = true

	_set_collision_mask([1,5])
	
	hide()
	set_physics_process(false)

func _physics_process(delta):
	bullet_behaviour(delta)
	query.position = global_position
	var results: Array = get_world_2d().direct_space_state.intersect_point(query, 1)
	for result in results:
		var entity = result["collider"]
		if entity.has_method("hit"):
			entity.hit(global_position, DAMAGE)
		_pool_unclaim()

func _pool_claim():
	timer = get_tree().create_timer(LIFETIME)
	timer.timeout.connect(_lifetime_timeout)
	show()
	set_physics_process(true)

func _pool_unclaim():
	var pool := ObjectPool.get_object_pool_from_object(self)
	if !pool.is_claimed(self):
		return
	timer.disconnect("timeout", _lifetime_timeout)
	timer = null
	pool.unclaim(self)
	hide()
	set_physics_process(false)
	
	var post_collision_node = post_collision.instantiate()
	post_collision_node.global_position = global_position
	get_parent().add_child(post_collision_node)

func _set_collision_mask(num: Array[int]):
	var num_bit: int = 0
	for n in num:
		num_bit += pow(2, n-1) as int # From godot multiple layer collision documentation
	query.collision_mask = num_bit
	
func _lifetime_timeout():
	_pool_unclaim()
