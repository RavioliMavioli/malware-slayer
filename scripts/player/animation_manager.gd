class_name AnimationManager extends Resource

#enum _state {IDLE, RUN, JUMP, FALL, ON_LEDGE, HIT}
#enum _facing {LOOK_FORWARD, LOOK_BACKWARD}
#enum _head {STRAIGHT, SLIGHT_UP, UP, SLIGHT_DOWN, DOWN}
#enum _flip {LEFT, RIGHT}
#enum _fire {LMB, RMB, Q, E, NULL}

var player: PlayerClass
var animation_tree_node: AnimationTree
var state_machine:AnimationNodeStateMachinePlayback

func _init(_player: PlayerClass):
	player = _player
	animation_tree_node = player.get_node("Arch").get_node("AnimationTree") as AnimationTree
	animation_tree_node.active = true
	state_machine = animation_tree_node["parameters/playback"] as AnimationNodeStateMachinePlayback

func process():
	var player_state: StateManager = player.state_manager as StateManager
	#################### State ########################
	match player_state.current_state:
		player_state._state.IDLE:
			state_machine.travel("idle")
		player_state._state.JUMP:
			state_machine.travel("jump")
		player_state._state.FALL:
			state_machine.travel("fall")
		player_state._state.ON_LEDGE:
			state_machine.travel("ledge")
	#################### Facing ########################
		player_state._state.RUN:
			match player_state.current_facing:
				player_state._facing.LOOK_FORWARD:
					state_machine.travel("run_forward")
				player_state._facing.LOOK_BACKWARD:
					state_machine.travel("run_backward")
