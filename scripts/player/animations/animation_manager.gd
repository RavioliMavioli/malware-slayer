class_name AnimationManager extends Node2D

#enum STATE {IDLE, RUN, JUMP, FALL, ON_LEDGE, HIT}
#enum FACING {LOOK_FORWARD, LOOK_BACKWARD}
#enum HEAD {STRAIGHT, SLIGHT_UP, UP, SLIGHT_DOWN, DOWN}
#enum FLIP {LEFT, RIGHT}
#enum FIRE {LMB, RMB, Q, E, NULL}

var player: Player:
	get: return owner
var player_state: StateManager:
	get: return player.get_node("%State")
var animation_tree_node: AnimationTree:
	get: return player.character_node.get_node("AnimationTree")
var state_machine:AnimationNodeStateMachinePlayback:
	get: return animation_tree_node["parameters/playback"]

func _ready() -> void:
	animation_tree_node.active = true

func _process(delta: float) -> void:
	
	#################### State ########################
	#var player_state.STATE.keys()[player_state.current_state]
	#AI_STATE.keys()[current_state]
	match player_state.current_state:
		player_state.STATE.IDLE:
			state_machine.travel("idle")
		player_state.STATE.JUMP:
			state_machine.travel("jump")
		player_state.STATE.FALL:
			state_machine.travel("fall")
		player_state.STATE.ON_LEDGE:
			state_machine.travel("ledge")
	#################### Facing ########################
		player_state.STATE.RUN:
			match player_state.current_facing:
				player_state.FACING.LOOK_FORWARD:
					state_machine.travel("run_forward")
				player_state.FACING.LOOK_BACKWARD:
					state_machine.travel("run_backward")
