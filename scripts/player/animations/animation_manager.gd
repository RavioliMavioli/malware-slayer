class_name AnimationManager extends Resource

#enum STATE {IDLE, RUN, JUMP, FALL, ON_LEDGE, HIT}
#enum FACING {LOOK_FORWARD, LOOK_BACKWARD}
#enum HEAD {STRAIGHT, SLIGHT_UP, UP, SLIGHT_DOWN, DOWN}
#enum FLIP {LEFT, RIGHT}
#enum FIRE {LMB, RMB, Q, E, NULL}

var player: PlayerClass
var animation_tree_node: AnimationTree
var state_machine:AnimationNodeStateMachinePlayback

func _init(_player: PlayerClass):
	player = _player

func setup_animation_tree(animation_tree: AnimationTree):
	animation_tree_node = animation_tree
	animation_tree_node.active = true
	state_machine = animation_tree_node["parameters/playback"] as AnimationNodeStateMachinePlayback

func process():
	if animation_tree_node == null:
		return
	var player_state: StateManager = player.state_manager
	#################### State ########################
	match player_state.current_state:
		player_state.STATE.IDLE:
			state_machine.travel("idle")
		player_state.STATE.JUMP:
			state_machine.travel("jump")
		player_state.STATE.FALL:
			state_machine.travel("fall")
		player_state.STATE.ON_LEDGE:
			state_machine.travel("ledge")
	#################### Facing ########################
		player_state.STATE.RUN:
			match player_state.current_facing:
				player_state.FACING.LOOK_FORWARD:
					state_machine.travel("run_forward")
				player_state.FACING.LOOK_BACKWARD:
					state_machine.travel("run_backward")
