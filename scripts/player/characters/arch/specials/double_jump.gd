class_name ArchDoubleJump extends Node2D

@export var double_jump_velocity := 500.0

var ledge_controls: PlayerLedgeControls:
	get: return %PlayerLedgeControls
var jump_controls: PlayerJumpControls:
	get: return %PlayerJumpControls

var player: PlayerClass:
	get: return owner
var can_double_jump := false

func _input(event: InputEvent) -> void:
	if Player.enable_input == Player.ENABLE_INPUT.DISABLED:
		return
	if !_double_jump_conditions():
		return
	if event.is_action_pressed("Jump"):
		_do_double_jump()
		can_double_jump = false

func _physics_process(delta: float) -> void:
	_reset_jump()

func _do_double_jump() -> void:
	player.velocity.y = -double_jump_velocity
	
func _reset_jump() -> void:
	if player.is_on_floor() or ledge_controls.on_ledge:
		can_double_jump = true

func _double_jump_conditions() -> bool:
	if player.is_on_floor():
		return false
	if ledge_controls.on_ledge:
		return false
	if jump_controls.coyote_timer != null:
		return false
	if !can_double_jump:
		return false
	return true
	
