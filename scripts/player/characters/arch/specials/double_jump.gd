class_name ArchDoubleJump extends Resource

var player: PlayerClass
var character_node: Node2D
var can_double_jump := false

func _init(_character_node: Node2D) -> void:
	character_node = _character_node

func ready(_player: PlayerClass) -> void:
	player = _player
	
func input(event: InputEventKey) -> void:
	if !_double_jump_conditions():
		return
	if event.is_action_pressed("Jump"):
		_do_double_jump()
		can_double_jump = false

func process() -> void:
	_reset_jump()

func _do_double_jump() -> void:
	player.velocity.y = -character_node.double_jump_velocity
	
func _reset_jump() -> void:
	if player.is_on_floor() or player.ledge_controls.on_ledge:
		can_double_jump = true

func _double_jump_conditions() -> bool:
	if player.is_on_floor():
		return false
	if player.ledge_controls.on_ledge:
		return false
	if player.jump_controls.coyote_timer != null:
		return false
	if !can_double_jump:
		return false
	return true
	
