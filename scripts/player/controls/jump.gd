class_name PlayerJumpControls extends Resource

signal touched_floor

enum TIMER {JUMP, COYOTE}
const JUMP_AMPLIFIER := 100.0
const JUMP_DURATION_WAIT_TIME := 0.33
const COYOTE_JUMP_WAIT_TIME := 0.1

var player: PlayerClass
var jump_timer: SceneTreeTimer
var coyote_timer: SceneTreeTimer
var was_on_floor := false

func _init(_player: PlayerClass) -> void:
	player = _player

func jump() -> void: # Public method if you want to jump from other script
	_create_timer(TIMER.JUMP)

func input(event: InputEventKey) -> void:
	if event.is_action_released("Jump"):
		jump_timer = null
	if event.is_action_pressed("Jump"):
		_do_jump()

func process(delta: float) -> void:
	_jump_process()
	_coyote()
	_ceiling_collide()
	_touched_floor_signal()
	
func _do_jump() -> void:
	# Jump Buffer
	var ground_check = player.ground_clearance.has_overlapping_bodies()
	if coyote_timer == null:
		if ground_check and !player.is_on_floor():
			await touched_floor # Wait until player touches the ground
		# Prevent flying
		if !player.is_on_floor():
			return
		# Cancel jump when the button is not pressed while still on jump buffer
		if !Input.is_action_pressed("Jump"):
			return
	# Main jump
	_create_timer(TIMER.JUMP)
	
func _jump_process() -> void:
	if jump_timer != null:
		player.velocity.y = -player.JUMP_VELOCITY - (jump_timer.time_left/JUMP_DURATION_WAIT_TIME * JUMP_AMPLIFIER)

func _coyote() -> void:
	if was_on_floor and !player.is_on_floor():
		_create_timer(TIMER.COYOTE)

func _ceiling_collide() -> void:
	if player.is_on_ceiling():
		player.velocity.y = 0
		jump_timer = null

func _create_timer(type: TIMER) -> void:
	match type:
		TIMER.JUMP:
			jump_timer = player.get_tree().create_timer(JUMP_DURATION_WAIT_TIME)
			jump_timer.timeout.connect(_jump_timeout)
		TIMER.COYOTE:
			coyote_timer = player.get_tree().create_timer(COYOTE_JUMP_WAIT_TIME)
			coyote_timer.timeout.connect(_coyote_timeout)

func _jump_timeout() -> void:
	jump_timer = null
	
func _coyote_timeout() -> void:
	coyote_timer = null

func _touched_floor_signal() -> void:
	if player.is_on_floor() and !was_on_floor:
		touched_floor.emit()
	was_on_floor = player.is_on_floor()
