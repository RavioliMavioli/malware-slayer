class_name PlayerMovementControls extends Node2D

const TERMINAL_VELOCITY := 850.0

@export var running_speed := 300.0

var player: PlayerInstance:
	get: return owner
var direction: int

func _input(event: InputEvent) -> void:
	direction = Input.get_axis("Left", "Right") as int

func _physics_process(delta: float) -> void:
	_run(delta)
	_cap_to_terminal_velocity()

func _run(delta: float) -> void:
	if Player.enable_input == Player.ENABLE_INPUT.DISABLED:
		return
	var SPEED_devider: int = 6 if player.is_on_floor() else 12
	if abs(player.velocity.x) > running_speed:
		SPEED_devider *= 4
	player.velocity.x = move_toward(player.velocity.x,
									direction * running_speed,
									running_speed/(SPEED_devider if direction else SPEED_devider * 2)	)

func _cap_to_terminal_velocity() -> void:
	player.velocity = Vector2(	min(abs(player.velocity.x), TERMINAL_VELOCITY) * sign(player.velocity.x) ,
								min(abs(player.velocity.y), TERMINAL_VELOCITY) * sign(player.velocity.y) )
