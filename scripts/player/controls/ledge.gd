class_name PlayerLedgeControls extends Resource

const VERTICAL_VELOCITY_TOLERANCE := 330.0

var player: PlayerClass
var ledge_detector: Area2D
var ledge_captured: Area2D
var clipping_preventer: Area2D
var ledge_collider_position: Vector2
var on_ledge := false
var ledge_direction := false

func _init(_player: PlayerClass) -> void:
	player = _player
	
func ready() -> void:
	ledge_detector = player.ledge_detection
	ledge_detector.area_entered.connect(_ledge_entered)
	ledge_collider_position = ledge_detector.get_node("LedgeDetectionR").position
	clipping_preventer = player.clipping_preventer
	
func input(event: InputEventKey) -> void:
	if !on_ledge:
		return
		
	if event.is_action_pressed("Jump"):
		player.jump_controls.jump()
		on_ledge = false
	if event.is_action_pressed("Down"):
		on_ledge = false
	
func process(delta: float) -> void:
	if !on_ledge:
		return
	if ledge_captured == null:
		return
	
	var offset := Vector2 (	-ledge_collider_position.x if ledge_direction else ledge_collider_position.x,
							-ledge_collider_position.y)
	player.velocity = Vector2.ZERO
	player.global_position = lerp(player.global_position, ledge_captured.global_position + offset, 0.5)
	
func _ledge_entered(area: Area2D) -> void:
	if player.velocity.y < -VERTICAL_VELOCITY_TOLERANCE:
		return
	if clipping_preventer.has_overlapping_bodies():
		return
	var delta_ledge_pos = area.global_position.x - player.global_position.x
	on_ledge = true
	ledge_captured = area
	ledge_direction = true if delta_ledge_pos > 0 else false
