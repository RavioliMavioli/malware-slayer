class_name PlayerClass extends CharacterBody2D

@export_category("Selected Character")
@export var selected_character: Player.CHARACTERS = Player.CHARACTERS.ARCH

@onready var state_manager := StateManager.new(self)
@onready var animation_manager := AnimationManager.new(self)

var gravity = ProjectSettings.get_setting("physics/2d/default_gravity")

func _ready() -> void:
	Player.player_node = self
	_init_character()

func _physics_process(delta: float) -> void:
	_fall(delta)
	move_and_slide()

func _process(delta: float) -> void:
	state_manager.process()
	animation_manager.process()

	$State/CharState.text = state_manager.get_current_state_id()
	$State/CharFacing.text = state_manager.get_current_facing_id()
	$State/CharHead.text = state_manager.get_current_head_id()
	$State/CharFlip.text = state_manager.get_current_flip_id()
	$State/CharFire.text = state_manager.get_current_fire_id()

func _init_character() -> void:
	# making different characters can be done by an outside script
	# or right here, since this script is kinda empty at this point
	
	var character_node := %Model as Node2D
	# State manager and animation manager init
	state_manager.set_sprite_node(character_node.get_node("AnimatedSprite2D"))
	animation_manager.setup_animation_tree(character_node.get_node("AnimationTree"))

func _fall(delta) -> void:
	if Player.ignore_gravity:
		return
	if !is_on_floor():
		velocity.y += gravity * delta
