class_name Player extends CharacterBody2D
## Player controls and states are managed in the seperate nodes
@export_category("Selected Character")
@export var selected_character: Player.CHARACTERS = Player.CHARACTERS.ARCH

enum CHARACTERS {IQARUS, ARCH, VOID, UBUNTU, DEBIAN, GENTOO, SYNC, STEAMOS}
enum ENABLE_INPUT {ENABLED, DISABLED}

static var instance: Player
static var current_character: CHARACTERS
static var enable_input: ENABLE_INPUT = ENABLE_INPUT.ENABLED
static var ignore_gravity := false

var gravity: float = ProjectSettings.get_setting("physics/2d/default_gravity")
var character_node: Node2D:
	get: return %Model

func _init() -> void:
	instance = self

func _physics_process(delta: float) -> void:
	_fall(delta)
	move_and_slide()

func _fall(delta) -> void:
	if ignore_gravity:
		return
	if !is_on_floor():
		velocity.y += gravity * delta
