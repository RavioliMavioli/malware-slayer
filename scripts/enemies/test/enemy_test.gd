class_name Enemy extends RigidBody2D

@onready var health_bar:TextureProgressBar = $Control/ControlHealthBar/HealthBar
@onready var sprite:AnimatedSprite2D = $Sprite
@onready var collider:CollisionShape2D = $Collision
var camera_shaker := CameraShaker.new()
const SPEED = 5000
const JUMP = -500
var delta_player_position: Vector2

var health:HealthComponent:
	get: return %HealthComponent

func _ready():
	sprite.visible = true
	health.changed.connect(_health_changed)
	health.died.connect(_died)
	health_bar.max_value = health.max_value
	health_bar.value = health.value



func _physics_process(delta):

	modulate = lerp(modulate, Color(1.0, 1.0, 1.0), delta*8)
	global_position = global_position
	global_rotation = 0.0
	enemy_behaviour(delta)

func enemy_behaviour(delta):
	delta_player_position = Player.player_node.global_position - global_position
	sprite.play("idle")

	var direction:float = delta_player_position.x
	if direction < 0:
		direction = -1
	else:
		direction = 1

	linear_velocity.x = direction * SPEED * delta

	if delta_player_position.x < 0:
		$Sprite.flip_h = true
	else:
		$Sprite.flip_h = false
	

func _health_changed(res:HealthComponent.Result):
	health_bar.max_value = health.max_value
	health_bar.value = health.value

func _died():
	EntityManager.mark_as_unsaveable(self)
	modulate = Color(1,1,1)
	health_bar.visible = false
	$AnimationPlayer.play("dead")
	set_physics_process(false)
	freeze = true
	sprite.visible = false
	$Dead.start()
	$Blood.emitting = true
	collider.disabled = true
	camera_shaker.shake_medium_medium()

func _on_animation_player_animation_finished(_anim_name):
	queue_free()

func _on_dead_timeout():
	queue_free()
