shader_type canvas_item;

uniform float character_texture_size: hint_range(32, 1024, 2) = 32.0;
uniform float speed: hint_range(0, 24, 1) = 3.0;
uniform float brightness: hint_range(0.1, 4, 0.1) = 1.0;
uniform float stretch: hint_range(1, 5, 1) = 1.0;
uniform vec4 color : source_color = vec4(0.0, 255.0, 0.0, 1.0);

uniform sampler2D chars: repeat_enable;
uniform sampler2D noise_tex;

void fragment() {
	// Random character
	vec2 uv = fract(UV * character_texture_size); // loop uv 32 times for the characters (as the noise resolution is 32x32)
	float noise = texture(noise_tex, UV).g;
	noise = round(noise * 10.0) / 10.0; // make sure the color value are snapped by 0.1 (so its only 0.0, 0.1, 0.2, and so on) for perfect offset
	uv.x = (uv.x / 10.0) - 0.005; // offset
	uv.x += noise; // offset every character by the noise value
	uv.x += round(TIME * speed * character_texture_size/64.0 * 10.0)/10.0; // animate characters with TIME, then snapped by 0.1 so it doesnt slide. 0.5 is the speed, you might want to change that
	uv.x *= stretch;
	// distortion
	float rain = UV.y; // this is a vertical gradient
	float distortion = texture(noise_tex, UV / vec2(1.0, character_texture_size)).g; // this will be used for distortion, using previous noise but only horizontal
	distortion = round(distortion * 10.0) / 10.0; // for precision reason, you need to round your distortion too, otherwise some character wouldnt be fully shown
	rain -= round(TIME * speed * 0.2 * character_texture_size) / character_texture_size; // the 'rain' shouldn't move smoothly right? also, 0.2 is the speed
	rain += distortion; // distort this gradient, turning it into a rain
	rain = fract(rain); // loop the rain
	rain = round(rain * character_texture_size) / character_texture_size; // pixelate the rain. Rounding by 32.0 or 8.0 is optional
	rain = pow(rain, 3.0); // this is not necessary, i just think that it looks good
	rain *= brightness; // this is also not important, just making the characters brighter
	
	vec4 final_tex = texture(chars, uv); // finally multiply them together then multiply with green for the color
	COLOR = final_tex;
	COLOR.a = texture(chars, uv).a * rain; 
}

