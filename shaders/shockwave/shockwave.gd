extends BackBufferCopy

@export var lifespan: float
@export var speed: float
@export var initial_size: float
@onready var shockwave: ColorRect = $Shockwave

var node: Object
var initial_force: float
var shock_size: float
var force: float
var expanding: bool = false
var atlas: bool = false

func _ready():
	shock_size = initial_size
	initial_force = shockwave.material.get("shader_parameter/force")
	shockwave.material.set("shader_parameter/preview_atlas", atlas)
	force = 0.0
	
func _process(delta):
	var p: Vector2 = Vector2.ZERO
	if node != null:
		var relative_position = Player.player_node.global_position - CAV.camera_node.global_position
		p = relative_position + CAV.const_viewport_resolution/2
		
	shockwave.material.set("shader_parameter/position", p)
	shockwave.material.set("shader_parameter/size", shock_size)
	shockwave.material.set("shader_parameter/force", force)
	
	shock_size += delta/(1/speed * 10)
	
	if !expanding:
		force += delta*2
		if force >= initial_force:
			expanding = true
			force = initial_force
			
	else:
		force -= delta/(lifespan)
		if force <= 0:
			set_process(false)
			queue_free()

func spawn(_node: Object):
	node = _node
	position = - CAV.screen_resolution/2
	rect.size = Vector2(node.get_viewport().size.x, node.get_viewport().size.x)
	CAV.camera_node.add_child(self)
