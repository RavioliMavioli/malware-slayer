extends Node

var thread: Array[Thread]

@onready var ui: CanvasLayer = $UI
@onready var crosshair: Sprite2D = $FloatingText/Crosshair
@onready var floating_text: Control = $FloatingText
@onready var view_box: SubViewportContainer = $SubViewportContainer
@onready var sub_viewport: SubViewport = $SubViewportContainer/SubViewport
@onready var screen_res: Vector2 = get_viewport().size as Vector2
@onready var floating_text_manager: FloatingTextManager = FloatingTextManager.new(floating_text)


var shockwave_weak: PackedScene = preload("res://shaders/shockwave/shockwave_weak.tscn")
var shockwave_normal: PackedScene = preload("res://shaders/shockwave/shockwave_normal.tscn")
var shockwave_strong: PackedScene = preload("res://shaders/shockwave/shockwave_large.tscn")

const VIEWPORT_RESOLUTION: Vector2i = Vector2i(1024, 576)

var engine_time: float = 1.0

func _ready():
	
	Input.set_mouse_mode(Input.MOUSE_MODE_HIDDEN)
	
	CAV.viewport_container_node = view_box
	CAV.viewport_node = sub_viewport
	
	#################### Screen Size ########################
	
	sub_viewport.size = VIEWPORT_RESOLUTION
	view_box.size = VIEWPORT_RESOLUTION
	
	CAV.container_default_position = view_box.position
	CAV.container_default_size = sub_viewport.size as Vector2
	CAV.container_default_scaling = screen_res / CAV.container_default_size
	CAV.screen_resolution = screen_res
	
	view_box.scale = CAV.container_default_scaling
	
	ui.scale = view_box.scale

func _physics_process(delta):
	floating_text_manager.physics()
	crosshair_physics()
	Engine.time_scale = lerp(Engine.time_scale, engine_time, delta * 10)
	
func crosshair_physics():
	crosshair.global_position = view_box.get_global_mouse_position()
	
func _input(event):
	
	if event.is_action_pressed("2"):
		engine_time = 1.0
	if event.is_action_pressed("3"):
		engine_time = 0.05
	if event.is_action_pressed("4"):
		var shockwave: BackBufferCopy = shockwave_weak.instantiate()
		CAV.camera_node.add_child(shockwave)
		shockwave.position = Vector2(-1024/2, -576/2)
	if event.is_action_pressed("5"):
		var shockwave: BackBufferCopy = shockwave_normal.instantiate()
		CAV.camera_node.add_child(shockwave)
		shockwave.position = Vector2(-1024/2, -576/2)
	if event.is_action_pressed("6"):
		var shockwave: BackBufferCopy = shockwave_strong.instantiate()
		CAV.camera_node.add_child(shockwave)
		shockwave.position = Vector2(-1024/2, -576/2)
		
