extends Node

var thread: Array[Thread]

@onready var ui: CanvasLayer = $UI
@onready var cursor: Node2D = $UI/Crosshair
@onready var view_box: SubViewportContainer = $SubViewportContainer
@onready var sub_viewport: SubViewport = $SubViewportContainer/SubViewport
@onready var terminal: Control = $PlayerFloatingText/Terminal
@onready var screen_res: Vector2 = get_viewport().size as Vector2
@onready var floating_text_manager: FloatingPositionManager = FloatingPositionManager.new($FloatingText)
@onready var floating_player_manager: FloatingPositionManager = FloatingPositionManager.new($PlayerFloatingText, Player.player_node)

var shockwave_weak: PackedScene = preload("res://shaders/shockwave/shockwave_weak.tscn")
var shockwave_normal: PackedScene = preload("res://shaders/shockwave/shockwave_normal.tscn")
var shockwave_strong: PackedScene = preload("res://shaders/shockwave/shockwave_large.tscn")

const VIEWPORT_RESOLUTION: Vector2i = Vector2i(1024, 576)

func _ready():
	
	Input.set_mouse_mode(Input.MOUSE_MODE_HIDDEN)
	
	CAV.viewport_container_node = view_box
	CAV.viewport_node = sub_viewport
	
	#################### Screen Size ########################
	
	sub_viewport.size = VIEWPORT_RESOLUTION
	view_box.size = VIEWPORT_RESOLUTION
	
	CAV.container_default_position = view_box.position
	CAV.container_default_size = sub_viewport.size as Vector2
	CAV.container_default_scaling = screen_res / CAV.container_default_size
	CAV.screen_resolution = screen_res
	
	view_box.scale = CAV.container_default_scaling
	
	ui.scale = view_box.scale
	terminal.anim_close()
	
func _physics_process(delta):
	floating_text_manager.physics(delta)
	floating_player_manager.physics(delta)
	#crosshair_physics()
	time_manager(delta)
	
func crosshair_physics():
	cursor.global_position = view_box.get_global_mouse_position()
	cursor.scale = Vector2(0.2, 0.2) / (CAV.viewport_container_node.scale)
	
func _input(event):
	if event.is_action_pressed("T") and Timemode.current_time_mode == Timemode._time_mode.NORMAL and !Player.player_node.is_on_floor():
		Timemode.current_time_mode = Timemode._time_mode.SLOWMO
		Timemode.toggle()
		spawn_shockwave()
		terminal.anim_open()
		
	if event.is_action_pressed("Pause") and Timemode.current_time_mode == Timemode._time_mode.SLOWMO:
		Timemode.current_time_mode = Timemode._time_mode.NORMAL
		#Player.player_node.velocity = Vector2(Player.player_node.direction * 400,-400.0)
		Timemode.toggle()
		terminal.anim_close()

func time_manager(delta):
	if Timemode.current_time_mode == Timemode._time_mode.SLOWMO:
		Engine.time_scale = lerp(Engine.time_scale, Timemode.engine_time, delta * 10)
		
	else:
		Engine.time_scale = Timemode.engine_time
		
func spawn_shockwave():
	var shockwave1: BackBufferCopy = shockwave_strong.instantiate()
	CAV.camera_node.add_child(shockwave1)
	shockwave1.position = Vector2(-1024/2, -576/2)
	
	
	
